@model X.PagedList.IPagedList<Young_Artists.Models.Commodity>
@using X.PagedList;
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "List";
}

<div class="pagetitle">
    <h1>商品清單</h1>
    <section class="section">
        <div class="row">
            <div class="col-lg-6">
            </div><!-- End Page Title -->

            <p>
                <a asp-action="Create" class="btn btn-primary">新增</a>
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            序
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Id)
                            @Html.ActionLink("", "List", new { sortCommodity = "UpCommodityId" },new {Class="bi bi-caret-up-fill"})
                            @Html.ActionLink("", "List", new { sortCommodity = "DownCommodityId" },new {Class="bi bi-caret-down-fill"})
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityName)
                            @Html.ActionLink("", "List", new { sortCommodity = "UpCommodityName" },new {Class="bi bi-caret-up-fill"})
                            @Html.ActionLink("", "List", new { sortCommodity = "DownCommodityName" },new {Class="bi bi-caret-down-fill"})
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityNarrative)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityNum)
                            @Html.ActionLink("", "List", new { sortCommodity = "UpCommodityNum" },new {Class="bi bi-caret-up-fill"})
                            @Html.ActionLink("", "List", new { sortCommodity = "DownCommodityNum" },new {Class="bi bi-caret-down-fill"})

                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityPrice)
                            @Html.ActionLink("", "List", new { sortCommodity = "UpCommodityPrice" },new {Class="bi bi-caret-up-fill"})
                            @Html.ActionLink("", "List", new { sortCommodity = "DownCommodityPrice" },new {Class="bi bi-caret-down-fill"})
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityImage)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityStart)
                            @Html.ActionLink("", "List", new { sortCommodity = "UpCommodityStart" },new {Class="bi bi-caret-up-fill"})
                            @Html.ActionLink("", "List", new { sortCommodity = "DownCommodityStart" },new {Class="bi bi-caret-down-fill"})
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityClassification)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CommodityState)
                            @Html.ActionLink("", "List", new { sortCommodity = "UpCommodityState" },new {Class="bi bi-caret-up-fill"})
                            @Html.ActionLink("", "List", new { sortCommodity = "DownCommodityState" },new {Class="bi bi-caret-down-fill"})
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int count = 0;
                        foreach (var item in Model)
                        {
                            count++;
                            <tr>
                                <td>
                                    @count
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityNarrative)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityNum)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityPrice)
                                </td>
                                <td>
                                    <img src="~/Images/@item.CommodityImage" width="80" height="50" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityStart)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityClassification)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CommodityState)
                                </td>
                                <td>
                                    @Html.ActionLink("", "Edit", new { id=item.Id  },new{Class="btn btn-warning bi bi-brush text-white"})
                                    @Html.ActionLink("", "OnLine", new {  id=item.Id },new { Class = "btn btn-primary bi bi-arrow-down-up"})
                                    @Html.ActionLink("", "Delete","Commodity"
                            , new { id=item.Id },new {Class="btn btn-danger bi bi-trash3 text-white",onclick = "return confirm('確定要刪除嗎?')"})
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))
